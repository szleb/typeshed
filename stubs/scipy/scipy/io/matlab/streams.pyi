# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.io.matlab.streams, version: unspecified
import builtins as _mod_builtins
import typing

BLOCK_SIZE: int

class GenericStream(_mod_builtins.object):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def all_data_read(self) -> typing.Any: ...
    def read(self) -> typing.Any: ...
    def seek(self) -> typing.Any: ...
    def tell(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

class ZlibInputStream(GenericStream):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def all_data_read(self) -> typing.Any: ...
    def read(self) -> typing.Any: ...
    def seek(self) -> typing.Any: ...
    def tell(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

__pyx_capi__: dict

def __pyx_unpickle_GenericStream() -> typing.Any: ...
def __pyx_unpickle_ZlibInputStream() -> typing.Any: ...

__test__: dict

def _read_into() -> typing.Any: ...
def _read_string() -> typing.Any: ...
def make_stream() -> typing.Any: ...
def __getattr__(name) -> typing.Any: ...
