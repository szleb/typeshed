# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.io.matlab.mio5_utils, version: unspecified
import builtins as _mod_builtins
import typing

class VarHeader5(_mod_builtins.object):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    @property
    def dims(self) -> typing.Any: ...
    @property
    def is_global(self) -> typing.Any: ...
    @property
    def is_logical(self) -> typing.Any: ...
    @property
    def mclass(self) -> typing.Any: ...
    @property
    def name(self) -> typing.Any: ...
    @property
    def nzmax(self) -> typing.Any: ...
    def set_dims(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

class VarReader5(_mod_builtins.object):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def array_from_header(self) -> typing.Any: ...
    @property
    def is_swapped(self) -> typing.Any: ...
    @property
    def little_endian(self) -> typing.Any: ...
    def read_cells(self) -> typing.Any: ...
    def read_char(self) -> typing.Any: ...
    def read_fieldnames(self) -> typing.Any: ...
    def read_full_tag(self) -> typing.Any: ...
    def read_header(self) -> typing.Any: ...
    def read_numeric(self) -> typing.Any: ...
    def read_opaque(self) -> typing.Any: ...
    def read_real_complex(self) -> typing.Any: ...
    def read_struct(self) -> typing.Any: ...
    def read_tag(self) -> typing.Any: ...
    def set_stream(self) -> typing.Any: ...
    def shape_from_header(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

def __pyx_unpickle_VarHeader5() -> typing.Any: ...

__test__: dict

def asbytes(s) -> typing.Any: ...
def asstr(s) -> typing.Any: ...
def byteswap_u4() -> typing.Any: ...
def chars_to_strings() -> typing.Any: ...
def pycopy(x) -> typing.Any: ...
def squeeze_element() -> typing.Any: ...

swapped_code: str

def __getattr__(name) -> typing.Any: ...
