# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.cluster._hierarchy, version: unspecified
import builtins as _mod_builtins
import typing

class Heap(_mod_builtins.object):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def change_value(self) -> typing.Any: ...
    def get_min(self) -> typing.Any: ...
    def remove_min(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

class LinkageUnionFind(_mod_builtins.object):
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def __getattr__(self, name) -> typing.Any: ...

def __pyx_unpickle_Enum() -> typing.Any: ...
def __pyx_unpickle_Heap() -> typing.Any: ...
def __pyx_unpickle_LinkageUnionFind() -> typing.Any: ...

__test__: dict

def calculate_cluster_sizes() -> typing.Any: ...
def cluster_dist() -> typing.Any: ...
def cluster_in() -> typing.Any: ...
def cluster_maxclust_dist() -> typing.Any: ...
def cluster_maxclust_monocrit() -> typing.Any: ...
def cluster_monocrit() -> typing.Any: ...
def cophenetic_distances() -> typing.Any: ...
def fast_linkage() -> typing.Any: ...
def get_max_Rfield_for_each_cluster() -> typing.Any: ...
def get_max_dist_for_each_cluster() -> typing.Any: ...
def inconsistent() -> typing.Any: ...
def leaders() -> typing.Any: ...
def linkage() -> typing.Any: ...
def mst_single_linkage() -> typing.Any: ...
def nn_chain() -> typing.Any: ...
def prelist() -> typing.Any: ...
def __getattr__(name) -> typing.Any: ...
