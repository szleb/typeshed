# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.linalg._flapack, version: $Revision: $
import typing

__version__: bytes

def cgbsv(kl, ku, ab, b, overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def cgbtrf(ab, kl, ku, m=..., n=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def cgbtrs(ab, kl, ku, b, ipiv, trans=..., n=..., ldab=..., ldb=..., overwrite_b=...) -> typing.Any: ...
def cgebal(a, scale=..., permute=..., overwrite_a=...) -> typing.Any: ...
def cgecon(a, anorm, norm=...) -> typing.Any: ...
def cgeequ(a) -> typing.Any: ...
def cgeequb(a) -> typing.Any: ...
def cgees(cselect, a, compute_v=..., sort_t=..., lwork=..., cselect_extra_args=..., overwrite_a=...) -> typing.Any: ...
def cgeev(a, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def cgeev_lwork(n, compute_vl=..., compute_vr=...) -> typing.Any: ...
def cgegv(*args, **kwds) -> typing.Any: ...
def cgehrd(a, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def cgehrd_lwork(n, lo=..., hi=...) -> typing.Any: ...
def cgels(a, b, trans=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cgels_lwork(m, n, nrhs, trans=...) -> typing.Any: ...
def cgelsd(a, b, lwork, size_rwork, size_iwork, cond=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cgelsd_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def cgelss(a, b, cond=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cgelss_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def cgelsy(a, b, jptv, cond, lwork, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cgelsy_lwork(m, n, nrhs, cond, lwork=...) -> typing.Any: ...
def cgemqrt(v, t, c, side=..., trans=..., overwrite_c=...) -> typing.Any: ...
def cgeqp3(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def cgeqrf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def cgeqrf_lwork(m, n) -> typing.Any: ...
def cgeqrfp(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def cgeqrfp_lwork(m, n) -> typing.Any: ...
def cgeqrt(nb, a, overwrite_a=...) -> typing.Any: ...
def cgerqf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def cgesc2(lu, rhs, ipiv, jpiv, overwrite_rhs=...) -> typing.Any: ...
def cgesdd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def cgesdd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def cgesv(a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cgesvd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def cgesvd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def cgesvx(
    a, b, fact=..., trans=..., af=..., ipiv=..., equed=..., r=..., c=..., overwrite_a=..., overwrite_b=...
) -> typing.Any: ...
def cgetc2(a, overwrite_a=...) -> typing.Any: ...
def cgetrf(a, overwrite_a=...) -> typing.Any: ...
def cgetri(lu, piv, lwork=..., overwrite_lu=...) -> typing.Any: ...
def cgetri_lwork(n) -> typing.Any: ...
def cgetrs(lu, piv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def cgges(
    cselect,
    a,
    b,
    jobvsl=...,
    jobvsr=...,
    sort_t=...,
    ldvsl=...,
    ldvsr=...,
    lwork=...,
    cselect_extra_args=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def cggev(a, b, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cgglse(a, b, c, d, lwork=..., overwrite_a=..., overwrite_b=..., overwrite_c=..., overwrite_d=...) -> typing.Any: ...
def cgglse_lwork(m, n, p) -> typing.Any: ...
def cgtsv(dl, d, du, b, overwrite_dl=..., overwrite_d=..., overwrite_du=..., overwrite_b=...) -> typing.Any: ...
def cgtsvx(dl, d, du, b, fact=..., trans=..., dlf=..., df=..., duf=..., du2=..., ipiv=...) -> typing.Any: ...
def cgttrf(dl, d, du, overwrite_dl=..., overwrite_d=..., overwrite_du=...) -> typing.Any: ...
def cgttrs(dl, d, du, du2, ipiv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def chbevd(ab, compute_v=..., lower=..., ldab=..., lrwork=..., liwork=..., overwrite_ab=...) -> typing.Any: ...
def chbevx(
    ab, vl, vu, il, iu, ldab=..., compute_v=..., range=..., lower=..., abstol=..., mmax=..., overwrite_ab=...
) -> typing.Any: ...
def checon(a, ipiv, anorm, lower=...) -> typing.Any: ...
def cheequb(a, lower=...) -> typing.Any: ...
def cheev(a, compute_v=..., lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def cheev_lwork(n, lower=...) -> typing.Any: ...
def cheevd(a, compute_v=..., lower=..., lwork=..., liwork=..., lrwork=..., overwrite_a=...) -> typing.Any: ...
def cheevd_lwork(n, compute_v=..., lower=...) -> typing.Any: ...
def cheevr(
    a,
    compute_v=...,
    range=...,
    lower=...,
    vl=...,
    vu=...,
    il=...,
    iu=...,
    abstol=...,
    lwork=...,
    lrwork=...,
    liwork=...,
    overwrite_a=...,
) -> typing.Any: ...
def cheevr_lwork(n, lower=...) -> typing.Any: ...
def cheevx(
    a, compute_v=..., range=..., lower=..., vl=..., vu=..., il=..., iu=..., abstol=..., lwork=..., overwrite_a=...
) -> typing.Any: ...
def cheevx_lwork(n, lower=...) -> typing.Any: ...
def chegst(a, b, itype=..., lower=..., overwrite_a=...) -> typing.Any: ...
def chegv(a, b, itype=..., jobz=..., uplo=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def chegv_lwork(n, uplo=...) -> typing.Any: ...
def chegvd(
    a, b, itype=..., jobz=..., uplo=..., lwork=..., lrwork=..., liwork=..., overwrite_a=..., overwrite_b=...
) -> typing.Any: ...
def chegvx(
    a,
    b,
    itype=...,
    jobz=...,
    range=...,
    uplo=...,
    vl=...,
    vu=...,
    il=...,
    iu=...,
    abstol=...,
    lwork=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def chegvx_lwork(n, uplo=...) -> typing.Any: ...
def chesv(a, b, lwork=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def chesv_lwork(n, lower=...) -> typing.Any: ...
def chesvx(a, b, af=..., ipiv=..., lwork=..., factored=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def chesvx_lwork(n, lower=...) -> typing.Any: ...
def chetrd(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def chetrd_lwork(n, lower=...) -> typing.Any: ...
def chetrf(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def chetrf_lwork(n, lower=...) -> typing.Any: ...
def chfrk(n, k, alpha, a, beta, c, transr=..., uplo=..., trans=..., overwrite_c=...) -> typing.Any: ...
def clange(norm, a) -> typing.Any: ...
def clarf(v, tau, c, work, side=..., incv=..., overwrite_c=...) -> typing.Any: ...
def clarfg(n, alpha, x, incx=..., overwrite_x=...) -> typing.Any: ...
def clartg(f, g) -> typing.Any: ...
def claswp(a, piv, k1=..., k2=..., off=..., inc=..., overwrite_a=...) -> typing.Any: ...
def clauum(c, lower=..., overwrite_c=...) -> typing.Any: ...
def cpbsv(ab, b, lower=..., ldab=..., overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def cpbtrf(ab, lower=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def cpbtrs(ab, b, lower=..., ldab=..., overwrite_b=...) -> typing.Any: ...
def cpftrf(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def cpftri(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def cpftrs(n, a, b, transr=..., uplo=..., overwrite_b=...) -> typing.Any: ...
def cpocon(a, anorm, uplo=...) -> typing.Any: ...
def cposv(a, b, lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cposvx(a, b, fact=..., af=..., equed=..., s=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def cpotrf(a, lower=..., clean=..., overwrite_a=...) -> typing.Any: ...
def cpotri(c, lower=..., overwrite_c=...) -> typing.Any: ...
def cpotrs(c, b, lower=..., overwrite_b=...) -> typing.Any: ...
def cppcon(n, ap, anorm, lower=...) -> typing.Any: ...
def cppsv(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def cpptrf(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def cpptri(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def cpptrs(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def cpstf2(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def cpstrf(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def cpteqr(d, e, z, compute_z=..., overwrite_d=..., overwrite_e=..., overwrite_z=...) -> typing.Any: ...
def cptsv(d, e, b, overwrite_d=..., overwrite_e=..., overwrite_b=...) -> typing.Any: ...
def cptsvx(d, e, b, fact=..., df=..., ef=...) -> typing.Any: ...
def cpttrf(d, e, overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def cpttrs(d, e, b, lower=..., overwrite_b=...) -> typing.Any: ...
def crot(x, y, c, s, n=..., offx=..., incx=..., offy=..., incy=..., overwrite_x=..., overwrite_y=...) -> typing.Any: ...
def csycon(a, ipiv, anorm, lower=...) -> typing.Any: ...
def csyconv(a, ipiv, lower=..., way=..., overwrite_a=...) -> typing.Any: ...
def csyequb(a, lower=...) -> typing.Any: ...
def csysv(a, b, lwork=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def csysv_lwork(n, lower=...) -> typing.Any: ...
def csysvx(a, b, af=..., ipiv=..., lwork=..., factored=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def csysvx_lwork(n, lower=...) -> typing.Any: ...
def csytf2(a, lower=..., overwrite_a=...) -> typing.Any: ...
def csytrf(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def csytrf_lwork(n, lower=...) -> typing.Any: ...
def ctbtrs(ab, b, uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def ctfsm(alpha, a, b, transr=..., side=..., uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def ctfttp(n, arf, transr=..., uplo=...) -> typing.Any: ...
def ctfttr(n, arf, transr=..., uplo=...) -> typing.Any: ...
def ctgsen(
    select, a, b, q, z, lwork=..., liwork=..., overwrite_a=..., overwrite_b=..., overwrite_q=..., overwrite_z=...
) -> typing.Any: ...
def ctpmqrt(l, v, t, a, b, side=..., trans=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ctpqrt(l, nb, a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ctpttf(n, ap, transr=..., uplo=...) -> typing.Any: ...
def ctpttr(n, ap, uplo=...) -> typing.Any: ...
def ctrsyl(a, b, c, trana=..., tranb=..., isgn=..., overwrite_c=...) -> typing.Any: ...
def ctrtri(c, lower=..., unitdiag=..., overwrite_c=...) -> typing.Any: ...
def ctrtrs(a, b, lower=..., trans=..., unitdiag=..., lda=..., overwrite_b=...) -> typing.Any: ...
def ctrttf(a, transr=..., uplo=...) -> typing.Any: ...
def ctrttp(a, uplo=...) -> typing.Any: ...
def ctzrzf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def ctzrzf_lwork(m, n) -> typing.Any: ...
def cuncsd(
    x11,
    x12,
    x21,
    x22,
    compute_u1=...,
    compute_u2=...,
    compute_v1t=...,
    compute_v2t=...,
    trans=...,
    signs=...,
    lwork=...,
    lrwork=...,
    overwrite_x11=...,
    overwrite_x12=...,
    overwrite_x21=...,
    overwrite_x22=...,
) -> typing.Any: ...
def cuncsd_lwork(m, p, q) -> typing.Any: ...
def cunghr(a, tau, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def cunghr_lwork(n, lo=..., hi=...) -> typing.Any: ...
def cungqr(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def cungrq(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def cunmqr(side, trans, a, tau, c, lwork, overwrite_c=...) -> typing.Any: ...
def cunmrz(a, tau, c, side=..., trans=..., lwork=..., overwrite_c=...) -> typing.Any: ...
def cunmrz_lwork(m, n, side=..., trans=...) -> typing.Any: ...
def dgbsv(kl, ku, ab, b, overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def dgbtrf(ab, kl, ku, m=..., n=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def dgbtrs(ab, kl, ku, b, ipiv, trans=..., n=..., ldab=..., ldb=..., overwrite_b=...) -> typing.Any: ...
def dgebal(a, scale=..., permute=..., overwrite_a=...) -> typing.Any: ...
def dgecon(a, anorm, norm=...) -> typing.Any: ...
def dgeequ(a) -> typing.Any: ...
def dgeequb(a) -> typing.Any: ...
def dgees(dselect, a, compute_v=..., sort_t=..., lwork=..., dselect_extra_args=..., overwrite_a=...) -> typing.Any: ...
def dgeev(a, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dgeev_lwork(n, compute_vl=..., compute_vr=...) -> typing.Any: ...
def dgegv(*args, **kwds) -> typing.Any: ...
def dgehrd(a, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dgehrd_lwork(n, lo=..., hi=...) -> typing.Any: ...
def dgejsv(a, joba=..., jobu=..., jobv=..., jobr=..., jobt=..., jobp=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dgels(a, b, trans=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dgels_lwork(m, n, nrhs, trans=...) -> typing.Any: ...
def dgelsd(a, b, lwork, size_iwork, cond=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dgelsd_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def dgelss(a, b, cond=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dgelss_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def dgelsy(a, b, jptv, cond, lwork, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dgelsy_lwork(m, n, nrhs, cond, lwork=...) -> typing.Any: ...
def dgemqrt(v, t, c, side=..., trans=..., overwrite_c=...) -> typing.Any: ...
def dgeqp3(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def dgeqrf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def dgeqrf_lwork(m, n) -> typing.Any: ...
def dgeqrfp(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def dgeqrfp_lwork(m, n) -> typing.Any: ...
def dgeqrt(nb, a, overwrite_a=...) -> typing.Any: ...
def dgerqf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def dgesc2(lu, rhs, ipiv, jpiv, overwrite_rhs=...) -> typing.Any: ...
def dgesdd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dgesdd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def dgesv(a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dgesvd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dgesvd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def dgesvx(
    a, b, fact=..., trans=..., af=..., ipiv=..., equed=..., r=..., c=..., overwrite_a=..., overwrite_b=...
) -> typing.Any: ...
def dgetc2(a, overwrite_a=...) -> typing.Any: ...
def dgetrf(a, overwrite_a=...) -> typing.Any: ...
def dgetri(lu, piv, lwork=..., overwrite_lu=...) -> typing.Any: ...
def dgetri_lwork(n) -> typing.Any: ...
def dgetrs(lu, piv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def dgges(
    dselect,
    a,
    b,
    jobvsl=...,
    jobvsr=...,
    sort_t=...,
    ldvsl=...,
    ldvsr=...,
    lwork=...,
    dselect_extra_args=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def dggev(a, b, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dgglse(a, b, c, d, lwork=..., overwrite_a=..., overwrite_b=..., overwrite_c=..., overwrite_d=...) -> typing.Any: ...
def dgglse_lwork(m, n, p) -> typing.Any: ...
def dgtsv(dl, d, du, b, overwrite_dl=..., overwrite_d=..., overwrite_du=..., overwrite_b=...) -> typing.Any: ...
def dgtsvx(dl, d, du, b, fact=..., trans=..., dlf=..., df=..., duf=..., du2=..., ipiv=...) -> typing.Any: ...
def dgttrf(dl, d, du, overwrite_dl=..., overwrite_d=..., overwrite_du=...) -> typing.Any: ...
def dgttrs(dl, d, du, du2, ipiv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def dlamch(cmach) -> typing.Any: ...
def dlange(norm, a) -> typing.Any: ...
def dlarf(v, tau, c, work, side=..., incv=..., overwrite_c=...) -> typing.Any: ...
def dlarfg(n, alpha, x, incx=..., overwrite_x=...) -> typing.Any: ...
def dlartg(f, g) -> typing.Any: ...
def dlasd4(i, d, z, rho=...) -> typing.Any: ...
def dlaswp(a, piv, k1=..., k2=..., off=..., inc=..., overwrite_a=...) -> typing.Any: ...
def dlauum(c, lower=..., overwrite_c=...) -> typing.Any: ...
def dorcsd(
    x11,
    x12,
    x21,
    x22,
    compute_u1=...,
    compute_u2=...,
    compute_v1t=...,
    compute_v2t=...,
    trans=...,
    signs=...,
    lwork=...,
    overwrite_x11=...,
    overwrite_x12=...,
    overwrite_x21=...,
    overwrite_x22=...,
) -> typing.Any: ...
def dorcsd_lwork(m, p, q) -> typing.Any: ...
def dorghr(a, tau, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dorghr_lwork(n, lo=..., hi=...) -> typing.Any: ...
def dorgqr(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def dorgrq(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def dormqr(side, trans, a, tau, c, lwork, overwrite_c=...) -> typing.Any: ...
def dormrz(a, tau, c, side=..., trans=..., lwork=..., overwrite_c=...) -> typing.Any: ...
def dormrz_lwork(m, n, side=..., trans=...) -> typing.Any: ...
def dpbsv(ab, b, lower=..., ldab=..., overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def dpbtrf(ab, lower=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def dpbtrs(ab, b, lower=..., ldab=..., overwrite_b=...) -> typing.Any: ...
def dpftrf(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def dpftri(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def dpftrs(n, a, b, transr=..., uplo=..., overwrite_b=...) -> typing.Any: ...
def dpocon(a, anorm, uplo=...) -> typing.Any: ...
def dposv(a, b, lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dposvx(a, b, fact=..., af=..., equed=..., s=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dpotrf(a, lower=..., clean=..., overwrite_a=...) -> typing.Any: ...
def dpotri(c, lower=..., overwrite_c=...) -> typing.Any: ...
def dpotrs(c, b, lower=..., overwrite_b=...) -> typing.Any: ...
def dppcon(n, ap, anorm, lower=...) -> typing.Any: ...
def dppsv(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def dpptrf(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def dpptri(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def dpptrs(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def dpstf2(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def dpstrf(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def dpteqr(d, e, z, compute_z=..., overwrite_d=..., overwrite_e=..., overwrite_z=...) -> typing.Any: ...
def dptsv(d, e, b, overwrite_d=..., overwrite_e=..., overwrite_b=...) -> typing.Any: ...
def dptsvx(d, e, b, fact=..., df=..., ef=...) -> typing.Any: ...
def dpttrf(d, e, overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def dpttrs(d, e, b, overwrite_b=...) -> typing.Any: ...
def dsbev(ab, compute_v=..., lower=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def dsbevd(ab, compute_v=..., lower=..., ldab=..., liwork=..., overwrite_ab=...) -> typing.Any: ...
def dsbevx(
    ab, vl, vu, il, iu, ldab=..., compute_v=..., range=..., lower=..., abstol=..., mmax=..., overwrite_ab=...
) -> typing.Any: ...
def dsfrk(n, k, alpha, a, beta, c, transr=..., uplo=..., trans=..., overwrite_c=...) -> typing.Any: ...
def dstebz(d, e, range, vl, vu, il, iu, tol, order) -> typing.Any: ...
def dstein(d, e, w, iblock, isplit) -> typing.Any: ...
def dstemr(d, e, range, vl, vu, il, iu, compute_v=..., lwork=..., liwork=..., overwrite_d=...) -> typing.Any: ...
def dstemr_lwork(d, e, range, vl, vu, il, iu, compute_v=..., overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def dsterf(d, e, overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def dstev(d, e, compute_v=..., overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def dsycon(a, ipiv, anorm, lower=...) -> typing.Any: ...
def dsyconv(a, ipiv, lower=..., way=..., overwrite_a=...) -> typing.Any: ...
def dsyequb(a, lower=...) -> typing.Any: ...
def dsyev(a, compute_v=..., lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dsyev_lwork(n, lower=...) -> typing.Any: ...
def dsyevd(a, compute_v=..., lower=..., lwork=..., liwork=..., overwrite_a=...) -> typing.Any: ...
def dsyevd_lwork(n, compute_v=..., lower=...) -> typing.Any: ...
def dsyevr(
    a, compute_v=..., range=..., lower=..., vl=..., vu=..., il=..., iu=..., abstol=..., lwork=..., liwork=..., overwrite_a=...
) -> typing.Any: ...
def dsyevr_lwork(n, lower=...) -> typing.Any: ...
def dsyevx(
    a, compute_v=..., range=..., lower=..., vl=..., vu=..., il=..., iu=..., abstol=..., lwork=..., overwrite_a=...
) -> typing.Any: ...
def dsyevx_lwork(n, lower=...) -> typing.Any: ...
def dsygst(a, b, itype=..., lower=..., overwrite_a=...) -> typing.Any: ...
def dsygv(a, b, itype=..., jobz=..., uplo=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dsygv_lwork(n, uplo=...) -> typing.Any: ...
def dsygvd(a, b, itype=..., jobz=..., uplo=..., lwork=..., liwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dsygvx(
    a,
    b,
    itype=...,
    jobz=...,
    range=...,
    uplo=...,
    vl=...,
    vu=...,
    il=...,
    iu=...,
    abstol=...,
    lwork=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def dsygvx_lwork(n, uplo=...) -> typing.Any: ...
def dsysv(a, b, lwork=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dsysv_lwork(n, lower=...) -> typing.Any: ...
def dsysvx(a, b, af=..., ipiv=..., lwork=..., factored=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dsysvx_lwork(n, lower=...) -> typing.Any: ...
def dsytf2(a, lower=..., overwrite_a=...) -> typing.Any: ...
def dsytrd(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dsytrd_lwork(n, lower=...) -> typing.Any: ...
def dsytrf(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def dsytrf_lwork(n, lower=...) -> typing.Any: ...
def dtbtrs(ab, b, uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def dtfsm(alpha, a, b, transr=..., side=..., uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def dtfttp(n, arf, transr=..., uplo=...) -> typing.Any: ...
def dtfttr(n, arf, transr=..., uplo=...) -> typing.Any: ...
def dtgsen(
    select, a, b, q, z, lwork=..., liwork=..., overwrite_a=..., overwrite_b=..., overwrite_q=..., overwrite_z=...
) -> typing.Any: ...
def dtpmqrt(l, v, t, a, b, side=..., trans=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dtpqrt(l, nb, a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def dtpttf(n, ap, transr=..., uplo=...) -> typing.Any: ...
def dtpttr(n, ap, uplo=...) -> typing.Any: ...
def dtrsyl(a, b, c, trana=..., tranb=..., isgn=..., overwrite_c=...) -> typing.Any: ...
def dtrtri(c, lower=..., unitdiag=..., overwrite_c=...) -> typing.Any: ...
def dtrtrs(a, b, lower=..., trans=..., unitdiag=..., lda=..., overwrite_b=...) -> typing.Any: ...
def dtrttf(a, transr=..., uplo=...) -> typing.Any: ...
def dtrttp(a, uplo=...) -> typing.Any: ...
def dtzrzf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def dtzrzf_lwork(m, n) -> typing.Any: ...
def ilaver() -> typing.Any: ...
def sgbsv(kl, ku, ab, b, overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def sgbtrf(ab, kl, ku, m=..., n=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def sgbtrs(ab, kl, ku, b, ipiv, trans=..., n=..., ldab=..., ldb=..., overwrite_b=...) -> typing.Any: ...
def sgebal(a, scale=..., permute=..., overwrite_a=...) -> typing.Any: ...
def sgecon(a, anorm, norm=...) -> typing.Any: ...
def sgeequ(a) -> typing.Any: ...
def sgeequb(a) -> typing.Any: ...
def sgees(sselect, a, compute_v=..., sort_t=..., lwork=..., sselect_extra_args=..., overwrite_a=...) -> typing.Any: ...
def sgeev(a, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def sgeev_lwork(n, compute_vl=..., compute_vr=...) -> typing.Any: ...
def sgegv(*args, **kwds) -> typing.Any: ...
def sgehrd(a, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def sgehrd_lwork(n, lo=..., hi=...) -> typing.Any: ...
def sgejsv(a, joba=..., jobu=..., jobv=..., jobr=..., jobt=..., jobp=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def sgels(a, b, trans=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sgels_lwork(m, n, nrhs, trans=...) -> typing.Any: ...
def sgelsd(a, b, lwork, size_iwork, cond=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sgelsd_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def sgelss(a, b, cond=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sgelss_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def sgelsy(a, b, jptv, cond, lwork, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sgelsy_lwork(m, n, nrhs, cond, lwork=...) -> typing.Any: ...
def sgemqrt(v, t, c, side=..., trans=..., overwrite_c=...) -> typing.Any: ...
def sgeqp3(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def sgeqrf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def sgeqrf_lwork(m, n) -> typing.Any: ...
def sgeqrfp(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def sgeqrfp_lwork(m, n) -> typing.Any: ...
def sgeqrt(nb, a, overwrite_a=...) -> typing.Any: ...
def sgerqf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def sgesc2(lu, rhs, ipiv, jpiv, overwrite_rhs=...) -> typing.Any: ...
def sgesdd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def sgesdd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def sgesv(a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sgesvd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def sgesvd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def sgesvx(
    a, b, fact=..., trans=..., af=..., ipiv=..., equed=..., r=..., c=..., overwrite_a=..., overwrite_b=...
) -> typing.Any: ...
def sgetc2(a, overwrite_a=...) -> typing.Any: ...
def sgetrf(a, overwrite_a=...) -> typing.Any: ...
def sgetri(lu, piv, lwork=..., overwrite_lu=...) -> typing.Any: ...
def sgetri_lwork(n) -> typing.Any: ...
def sgetrs(lu, piv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def sgges(
    sselect,
    a,
    b,
    jobvsl=...,
    jobvsr=...,
    sort_t=...,
    ldvsl=...,
    ldvsr=...,
    lwork=...,
    sselect_extra_args=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def sggev(a, b, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sgglse(a, b, c, d, lwork=..., overwrite_a=..., overwrite_b=..., overwrite_c=..., overwrite_d=...) -> typing.Any: ...
def sgglse_lwork(m, n, p) -> typing.Any: ...
def sgtsv(dl, d, du, b, overwrite_dl=..., overwrite_d=..., overwrite_du=..., overwrite_b=...) -> typing.Any: ...
def sgtsvx(dl, d, du, b, fact=..., trans=..., dlf=..., df=..., duf=..., du2=..., ipiv=...) -> typing.Any: ...
def sgttrf(dl, d, du, overwrite_dl=..., overwrite_d=..., overwrite_du=...) -> typing.Any: ...
def sgttrs(dl, d, du, du2, ipiv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def slamch(cmach) -> typing.Any: ...
def slange(norm, a) -> typing.Any: ...
def slarf(v, tau, c, work, side=..., incv=..., overwrite_c=...) -> typing.Any: ...
def slarfg(n, alpha, x, incx=..., overwrite_x=...) -> typing.Any: ...
def slartg(f, g) -> typing.Any: ...
def slasd4(i, d, z, rho=...) -> typing.Any: ...
def slaswp(a, piv, k1=..., k2=..., off=..., inc=..., overwrite_a=...) -> typing.Any: ...
def slauum(c, lower=..., overwrite_c=...) -> typing.Any: ...
def sorcsd(
    x11,
    x12,
    x21,
    x22,
    compute_u1=...,
    compute_u2=...,
    compute_v1t=...,
    compute_v2t=...,
    trans=...,
    signs=...,
    lwork=...,
    overwrite_x11=...,
    overwrite_x12=...,
    overwrite_x21=...,
    overwrite_x22=...,
) -> typing.Any: ...
def sorcsd_lwork(m, p, q) -> typing.Any: ...
def sorghr(a, tau, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def sorghr_lwork(n, lo=..., hi=...) -> typing.Any: ...
def sorgqr(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def sorgrq(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def sormqr(side, trans, a, tau, c, lwork, overwrite_c=...) -> typing.Any: ...
def sormrz(a, tau, c, side=..., trans=..., lwork=..., overwrite_c=...) -> typing.Any: ...
def sormrz_lwork(m, n, side=..., trans=...) -> typing.Any: ...
def spbsv(ab, b, lower=..., ldab=..., overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def spbtrf(ab, lower=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def spbtrs(ab, b, lower=..., ldab=..., overwrite_b=...) -> typing.Any: ...
def spftrf(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def spftri(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def spftrs(n, a, b, transr=..., uplo=..., overwrite_b=...) -> typing.Any: ...
def spocon(a, anorm, uplo=...) -> typing.Any: ...
def sposv(a, b, lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def sposvx(a, b, fact=..., af=..., equed=..., s=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def spotrf(a, lower=..., clean=..., overwrite_a=...) -> typing.Any: ...
def spotri(c, lower=..., overwrite_c=...) -> typing.Any: ...
def spotrs(c, b, lower=..., overwrite_b=...) -> typing.Any: ...
def sppcon(n, ap, anorm, lower=...) -> typing.Any: ...
def sppsv(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def spptrf(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def spptri(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def spptrs(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def spstf2(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def spstrf(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def spteqr(d, e, z, compute_z=..., overwrite_d=..., overwrite_e=..., overwrite_z=...) -> typing.Any: ...
def sptsv(d, e, b, overwrite_d=..., overwrite_e=..., overwrite_b=...) -> typing.Any: ...
def sptsvx(d, e, b, fact=..., df=..., ef=...) -> typing.Any: ...
def spttrf(d, e, overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def spttrs(d, e, b, overwrite_b=...) -> typing.Any: ...
def ssbev(ab, compute_v=..., lower=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def ssbevd(ab, compute_v=..., lower=..., ldab=..., liwork=..., overwrite_ab=...) -> typing.Any: ...
def ssbevx(
    ab, vl, vu, il, iu, ldab=..., compute_v=..., range=..., lower=..., abstol=..., mmax=..., overwrite_ab=...
) -> typing.Any: ...
def ssfrk(n, k, alpha, a, beta, c, transr=..., uplo=..., trans=..., overwrite_c=...) -> typing.Any: ...
def sstebz(d, e, range, vl, vu, il, iu, tol, order) -> typing.Any: ...
def sstein(d, e, w, iblock, isplit) -> typing.Any: ...
def sstemr(d, e, range, vl, vu, il, iu, compute_v=..., lwork=..., liwork=..., overwrite_d=...) -> typing.Any: ...
def sstemr_lwork(d, e, range, vl, vu, il, iu, compute_v=..., overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def ssterf(d, e, overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def sstev(d, e, compute_v=..., overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def ssycon(a, ipiv, anorm, lower=...) -> typing.Any: ...
def ssyconv(a, ipiv, lower=..., way=..., overwrite_a=...) -> typing.Any: ...
def ssyequb(a, lower=...) -> typing.Any: ...
def ssyev(a, compute_v=..., lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def ssyev_lwork(n, lower=...) -> typing.Any: ...
def ssyevd(a, compute_v=..., lower=..., lwork=..., liwork=..., overwrite_a=...) -> typing.Any: ...
def ssyevd_lwork(n, compute_v=..., lower=...) -> typing.Any: ...
def ssyevr(
    a, compute_v=..., range=..., lower=..., vl=..., vu=..., il=..., iu=..., abstol=..., lwork=..., liwork=..., overwrite_a=...
) -> typing.Any: ...
def ssyevr_lwork(n, lower=...) -> typing.Any: ...
def ssyevx(
    a, compute_v=..., range=..., lower=..., vl=..., vu=..., il=..., iu=..., abstol=..., lwork=..., overwrite_a=...
) -> typing.Any: ...
def ssyevx_lwork(n, lower=...) -> typing.Any: ...
def ssygst(a, b, itype=..., lower=..., overwrite_a=...) -> typing.Any: ...
def ssygv(a, b, itype=..., jobz=..., uplo=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ssygv_lwork(n, uplo=...) -> typing.Any: ...
def ssygvd(a, b, itype=..., jobz=..., uplo=..., lwork=..., liwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ssygvx(
    a,
    b,
    itype=...,
    jobz=...,
    range=...,
    uplo=...,
    vl=...,
    vu=...,
    il=...,
    iu=...,
    abstol=...,
    lwork=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def ssygvx_lwork(n, uplo=...) -> typing.Any: ...
def ssysv(a, b, lwork=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ssysv_lwork(n, lower=...) -> typing.Any: ...
def ssysvx(a, b, af=..., ipiv=..., lwork=..., factored=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ssysvx_lwork(n, lower=...) -> typing.Any: ...
def ssytf2(a, lower=..., overwrite_a=...) -> typing.Any: ...
def ssytrd(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def ssytrd_lwork(n, lower=...) -> typing.Any: ...
def ssytrf(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def ssytrf_lwork(n, lower=...) -> typing.Any: ...
def stbtrs(ab, b, uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def stfsm(alpha, a, b, transr=..., side=..., uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def stfttp(n, arf, transr=..., uplo=...) -> typing.Any: ...
def stfttr(n, arf, transr=..., uplo=...) -> typing.Any: ...
def stgsen(
    select, a, b, q, z, lwork=..., liwork=..., overwrite_a=..., overwrite_b=..., overwrite_q=..., overwrite_z=...
) -> typing.Any: ...
def stpmqrt(l, v, t, a, b, side=..., trans=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def stpqrt(l, nb, a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def stpttf(n, ap, transr=..., uplo=...) -> typing.Any: ...
def stpttr(n, ap, uplo=...) -> typing.Any: ...
def strsyl(a, b, c, trana=..., tranb=..., isgn=..., overwrite_c=...) -> typing.Any: ...
def strtri(c, lower=..., unitdiag=..., overwrite_c=...) -> typing.Any: ...
def strtrs(a, b, lower=..., trans=..., unitdiag=..., lda=..., overwrite_b=...) -> typing.Any: ...
def strttf(a, transr=..., uplo=...) -> typing.Any: ...
def strttp(a, uplo=...) -> typing.Any: ...
def stzrzf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def stzrzf_lwork(m, n) -> typing.Any: ...
def zgbsv(kl, ku, ab, b, overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def zgbtrf(ab, kl, ku, m=..., n=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def zgbtrs(ab, kl, ku, b, ipiv, trans=..., n=..., ldab=..., ldb=..., overwrite_b=...) -> typing.Any: ...
def zgebal(a, scale=..., permute=..., overwrite_a=...) -> typing.Any: ...
def zgecon(a, anorm, norm=...) -> typing.Any: ...
def zgeequ(a) -> typing.Any: ...
def zgeequb(a) -> typing.Any: ...
def zgees(zselect, a, compute_v=..., sort_t=..., lwork=..., zselect_extra_args=..., overwrite_a=...) -> typing.Any: ...
def zgeev(a, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zgeev_lwork(n, compute_vl=..., compute_vr=...) -> typing.Any: ...
def zgegv(*args, **kwds) -> typing.Any: ...
def zgehrd(a, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zgehrd_lwork(n, lo=..., hi=...) -> typing.Any: ...
def zgels(a, b, trans=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zgels_lwork(m, n, nrhs, trans=...) -> typing.Any: ...
def zgelsd(a, b, lwork, size_rwork, size_iwork, cond=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zgelsd_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def zgelss(a, b, cond=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zgelss_lwork(m, n, nrhs, cond=..., lwork=...) -> typing.Any: ...
def zgelsy(a, b, jptv, cond, lwork, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zgelsy_lwork(m, n, nrhs, cond, lwork=...) -> typing.Any: ...
def zgemqrt(v, t, c, side=..., trans=..., overwrite_c=...) -> typing.Any: ...
def zgeqp3(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def zgeqrf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def zgeqrf_lwork(m, n) -> typing.Any: ...
def zgeqrfp(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def zgeqrfp_lwork(m, n) -> typing.Any: ...
def zgeqrt(nb, a, overwrite_a=...) -> typing.Any: ...
def zgerqf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def zgesc2(lu, rhs, ipiv, jpiv, overwrite_rhs=...) -> typing.Any: ...
def zgesdd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zgesdd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def zgesv(a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zgesvd(a, compute_uv=..., full_matrices=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zgesvd_lwork(m, n, compute_uv=..., full_matrices=...) -> typing.Any: ...
def zgesvx(
    a, b, fact=..., trans=..., af=..., ipiv=..., equed=..., r=..., c=..., overwrite_a=..., overwrite_b=...
) -> typing.Any: ...
def zgetc2(a, overwrite_a=...) -> typing.Any: ...
def zgetrf(a, overwrite_a=...) -> typing.Any: ...
def zgetri(lu, piv, lwork=..., overwrite_lu=...) -> typing.Any: ...
def zgetri_lwork(n) -> typing.Any: ...
def zgetrs(lu, piv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def zgges(
    zselect,
    a,
    b,
    jobvsl=...,
    jobvsr=...,
    sort_t=...,
    ldvsl=...,
    ldvsr=...,
    lwork=...,
    zselect_extra_args=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def zggev(a, b, compute_vl=..., compute_vr=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zgglse(a, b, c, d, lwork=..., overwrite_a=..., overwrite_b=..., overwrite_c=..., overwrite_d=...) -> typing.Any: ...
def zgglse_lwork(m, n, p) -> typing.Any: ...
def zgtsv(dl, d, du, b, overwrite_dl=..., overwrite_d=..., overwrite_du=..., overwrite_b=...) -> typing.Any: ...
def zgtsvx(dl, d, du, b, fact=..., trans=..., dlf=..., df=..., duf=..., du2=..., ipiv=...) -> typing.Any: ...
def zgttrf(dl, d, du, overwrite_dl=..., overwrite_d=..., overwrite_du=...) -> typing.Any: ...
def zgttrs(dl, d, du, du2, ipiv, b, trans=..., overwrite_b=...) -> typing.Any: ...
def zhbevd(ab, compute_v=..., lower=..., ldab=..., lrwork=..., liwork=..., overwrite_ab=...) -> typing.Any: ...
def zhbevx(
    ab, vl, vu, il, iu, ldab=..., compute_v=..., range=..., lower=..., abstol=..., mmax=..., overwrite_ab=...
) -> typing.Any: ...
def zhecon(a, ipiv, anorm, lower=...) -> typing.Any: ...
def zheequb(a, lower=...) -> typing.Any: ...
def zheev(a, compute_v=..., lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zheev_lwork(n, lower=...) -> typing.Any: ...
def zheevd(a, compute_v=..., lower=..., lwork=..., liwork=..., lrwork=..., overwrite_a=...) -> typing.Any: ...
def zheevd_lwork(n, compute_v=..., lower=...) -> typing.Any: ...
def zheevr(
    a,
    compute_v=...,
    range=...,
    lower=...,
    vl=...,
    vu=...,
    il=...,
    iu=...,
    abstol=...,
    lwork=...,
    lrwork=...,
    liwork=...,
    overwrite_a=...,
) -> typing.Any: ...
def zheevr_lwork(n, lower=...) -> typing.Any: ...
def zheevx(
    a, compute_v=..., range=..., lower=..., vl=..., vu=..., il=..., iu=..., abstol=..., lwork=..., overwrite_a=...
) -> typing.Any: ...
def zheevx_lwork(n, lower=...) -> typing.Any: ...
def zhegst(a, b, itype=..., lower=..., overwrite_a=...) -> typing.Any: ...
def zhegv(a, b, itype=..., jobz=..., uplo=..., lwork=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zhegv_lwork(n, uplo=...) -> typing.Any: ...
def zhegvd(
    a, b, itype=..., jobz=..., uplo=..., lwork=..., lrwork=..., liwork=..., overwrite_a=..., overwrite_b=...
) -> typing.Any: ...
def zhegvx(
    a,
    b,
    itype=...,
    jobz=...,
    range=...,
    uplo=...,
    vl=...,
    vu=...,
    il=...,
    iu=...,
    abstol=...,
    lwork=...,
    overwrite_a=...,
    overwrite_b=...,
) -> typing.Any: ...
def zhegvx_lwork(n, uplo=...) -> typing.Any: ...
def zhesv(a, b, lwork=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zhesv_lwork(n, lower=...) -> typing.Any: ...
def zhesvx(a, b, af=..., ipiv=..., lwork=..., factored=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zhesvx_lwork(n, lower=...) -> typing.Any: ...
def zhetrd(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zhetrd_lwork(n, lower=...) -> typing.Any: ...
def zhetrf(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zhetrf_lwork(n, lower=...) -> typing.Any: ...
def zhfrk(n, k, alpha, a, beta, c, transr=..., uplo=..., trans=..., overwrite_c=...) -> typing.Any: ...
def zlange(norm, a) -> typing.Any: ...
def zlarf(v, tau, c, work, side=..., incv=..., overwrite_c=...) -> typing.Any: ...
def zlarfg(n, alpha, x, incx=..., overwrite_x=...) -> typing.Any: ...
def zlartg(f, g) -> typing.Any: ...
def zlaswp(a, piv, k1=..., k2=..., off=..., inc=..., overwrite_a=...) -> typing.Any: ...
def zlauum(c, lower=..., overwrite_c=...) -> typing.Any: ...
def zpbsv(ab, b, lower=..., ldab=..., overwrite_ab=..., overwrite_b=...) -> typing.Any: ...
def zpbtrf(ab, lower=..., ldab=..., overwrite_ab=...) -> typing.Any: ...
def zpbtrs(ab, b, lower=..., ldab=..., overwrite_b=...) -> typing.Any: ...
def zpftrf(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def zpftri(n, a, transr=..., uplo=..., overwrite_a=...) -> typing.Any: ...
def zpftrs(n, a, b, transr=..., uplo=..., overwrite_b=...) -> typing.Any: ...
def zpocon(a, anorm, uplo=...) -> typing.Any: ...
def zposv(a, b, lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zposvx(a, b, fact=..., af=..., equed=..., s=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zpotrf(a, lower=..., clean=..., overwrite_a=...) -> typing.Any: ...
def zpotri(c, lower=..., overwrite_c=...) -> typing.Any: ...
def zpotrs(c, b, lower=..., overwrite_b=...) -> typing.Any: ...
def zppcon(n, ap, anorm, lower=...) -> typing.Any: ...
def zppsv(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def zpptrf(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def zpptri(n, ap, lower=..., overwrite_ap=...) -> typing.Any: ...
def zpptrs(n, ap, b, lower=..., overwrite_b=...) -> typing.Any: ...
def zpstf2(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def zpstrf(a, tol=..., lower=..., overwrite_a=...) -> typing.Any: ...
def zpteqr(d, e, z, compute_z=..., overwrite_d=..., overwrite_e=..., overwrite_z=...) -> typing.Any: ...
def zptsv(d, e, b, overwrite_d=..., overwrite_e=..., overwrite_b=...) -> typing.Any: ...
def zptsvx(d, e, b, fact=..., df=..., ef=...) -> typing.Any: ...
def zpttrf(d, e, overwrite_d=..., overwrite_e=...) -> typing.Any: ...
def zpttrs(d, e, b, lower=..., overwrite_b=...) -> typing.Any: ...
def zrot(x, y, c, s, n=..., offx=..., incx=..., offy=..., incy=..., overwrite_x=..., overwrite_y=...) -> typing.Any: ...
def zsycon(a, ipiv, anorm, lower=...) -> typing.Any: ...
def zsyconv(a, ipiv, lower=..., way=..., overwrite_a=...) -> typing.Any: ...
def zsyequb(a, lower=...) -> typing.Any: ...
def zsysv(a, b, lwork=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zsysv_lwork(n, lower=...) -> typing.Any: ...
def zsysvx(a, b, af=..., ipiv=..., lwork=..., factored=..., lower=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def zsysvx_lwork(n, lower=...) -> typing.Any: ...
def zsytf2(a, lower=..., overwrite_a=...) -> typing.Any: ...
def zsytrf(a, lower=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zsytrf_lwork(n, lower=...) -> typing.Any: ...
def ztbtrs(ab, b, uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def ztfsm(alpha, a, b, transr=..., side=..., uplo=..., trans=..., diag=..., overwrite_b=...) -> typing.Any: ...
def ztfttp(n, arf, transr=..., uplo=...) -> typing.Any: ...
def ztfttr(n, arf, transr=..., uplo=...) -> typing.Any: ...
def ztgsen(
    select, a, b, q, z, lwork=..., liwork=..., overwrite_a=..., overwrite_b=..., overwrite_q=..., overwrite_z=...
) -> typing.Any: ...
def ztpmqrt(l, v, t, a, b, side=..., trans=..., overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ztpqrt(l, nb, a, b, overwrite_a=..., overwrite_b=...) -> typing.Any: ...
def ztpttf(n, ap, transr=..., uplo=...) -> typing.Any: ...
def ztpttr(n, ap, uplo=...) -> typing.Any: ...
def ztrsyl(a, b, c, trana=..., tranb=..., isgn=..., overwrite_c=...) -> typing.Any: ...
def ztrtri(c, lower=..., unitdiag=..., overwrite_c=...) -> typing.Any: ...
def ztrtrs(a, b, lower=..., trans=..., unitdiag=..., lda=..., overwrite_b=...) -> typing.Any: ...
def ztrttf(a, transr=..., uplo=...) -> typing.Any: ...
def ztrttp(a, uplo=...) -> typing.Any: ...
def ztzrzf(a, lwork=..., overwrite_a=...) -> typing.Any: ...
def ztzrzf_lwork(m, n) -> typing.Any: ...
def zuncsd(
    x11,
    x12,
    x21,
    x22,
    compute_u1=...,
    compute_u2=...,
    compute_v1t=...,
    compute_v2t=...,
    trans=...,
    signs=...,
    lwork=...,
    lrwork=...,
    overwrite_x11=...,
    overwrite_x12=...,
    overwrite_x21=...,
    overwrite_x22=...,
) -> typing.Any: ...
def zuncsd_lwork(m, p, q) -> typing.Any: ...
def zunghr(a, tau, lo=..., hi=..., lwork=..., overwrite_a=...) -> typing.Any: ...
def zunghr_lwork(n, lo=..., hi=...) -> typing.Any: ...
def zungqr(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def zungrq(a, tau, lwork=..., overwrite_a=...) -> typing.Any: ...
def zunmqr(side, trans, a, tau, c, lwork, overwrite_c=...) -> typing.Any: ...
def zunmrz(a, tau, c, side=..., trans=..., lwork=..., overwrite_c=...) -> typing.Any: ...
def zunmrz_lwork(m, n, side=..., trans=...) -> typing.Any: ...
def __getattr__(name) -> typing.Any: ...
