# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.spatial.qhull, version: unspecified
import typing

class _QhullUser:
    def __del__(self) -> None: ...

    __dict__: dict[str, typing.Any]
    def __init__(self, qhull, incremental) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    __module__: str
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    @property
    def __weakref__(self) -> typing.Any: ...
    def _add_points(self, points, restart, interior_point) -> typing.Any: ...
    _qhull: typing.Any
    def _update(self, qhull) -> typing.Any: ...
    def close(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

class ConvexHull(_QhullUser):
    __dict__: dict[str, typing.Any]
    def __init__(self, points, incremental=..., qhull_options=...) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def _update(self, qhull) -> typing.Any: ...
    def add_points(self, points, restart) -> typing.Any: ...
    points: property
    vertices: property
    def __getattr__(self, name) -> typing.Any: ...

class Delaunay(_QhullUser):
    __dict__: dict[str, typing.Any]
    def __init__(self, points, furthest_site=..., incremental=..., qhull_options=...) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def _update(self, qhull) -> typing.Any: ...
    def add_points(self, points, restart) -> typing.Any: ...
    convex_hull: property
    def find_simplex(self, xi, bruteforce, tol) -> typing.Any: ...
    def lift_points(self, x) -> typing.Any: ...
    def plane_distance(self, xi) -> typing.Any: ...
    points: property
    transform: property
    vertex_neighbor_vertices: property
    vertex_to_simplex: property
    def __getattr__(self, name) -> typing.Any: ...

class HalfspaceIntersection(_QhullUser):
    __dict__: dict[str, typing.Any]
    def __init__(self, halfspaces, interior_point, incremental=..., qhull_options=...) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def _update(self, qhull) -> typing.Any: ...
    def add_halfspaces(self, halfspaces, restart) -> typing.Any: ...
    dual_vertices: property
    halfspaces: property
    def __getattr__(self, name) -> typing.Any: ...

class QhullError(RuntimeError):
    __dict__: dict[str, typing.Any]
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    __module__: str
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    @property
    def __weakref__(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

class Voronoi(_QhullUser):
    __dict__: dict[str, typing.Any]
    def __init__(self, points, furthest_site=..., incremental=..., qhull_options=...) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def _update(self, qhull) -> typing.Any: ...
    def add_points(self, points, restart) -> typing.Any: ...
    points: property
    ridge_dict: property
    def __getattr__(self, name) -> typing.Any: ...

class _Qhull:
    def __init__(self, *args, **kwargs) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    def add_points(self) -> typing.Any: ...
    def check_active(self) -> typing.Any: ...
    def close(self) -> typing.Any: ...
    @property
    def furthest_site(self) -> typing.Any: ...
    def get_extremes_2d(self) -> typing.Any: ...
    def get_hull_facets(self) -> typing.Any: ...
    def get_hull_points(self) -> typing.Any: ...
    def get_paraboloid_shift_scale(self) -> typing.Any: ...
    def get_points(self) -> typing.Any: ...
    def get_simplex_facet_array(self) -> typing.Any: ...
    def get_voronoi_diagram(self) -> typing.Any: ...
    @property
    def mode_option(self) -> typing.Any: ...
    @property
    def ndim(self) -> typing.Any: ...
    @property
    def options(self) -> typing.Any: ...
    def triangulate(self) -> typing.Any: ...
    def volume_area(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

__pyx_capi__: dict

def __pyx_unpickle_Enum() -> typing.Any: ...

__test__: dict

def _copy_docstr() -> typing.Any: ...
def _get_barycentric_transforms() -> typing.Any: ...
def asbytes(s) -> typing.Any: ...
def tsearch(tri, xi) -> typing.Any: ...
def __getattr__(name) -> typing.Any: ...
