from typing_extensions import Self

class LowLevelCallable(tuple):
    def __new__(cls, function, user_data=..., signature=...) -> Self: ...
    @property
    def function(self): ...
    @property
    def user_data(self): ...
    @property
    def signature(self): ...
    def __getitem__(self, idx): ...
    @classmethod
    def from_cython(cls, module, name, user_data=..., signature=...): ...
    @classmethod
    def _parse_callback(cls, obj, user_data=..., signature=...): ...
