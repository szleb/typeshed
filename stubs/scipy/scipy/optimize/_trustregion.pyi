from _typeshed import SupportsRichComparisonT

from numpy.typing import ArrayLike

class BaseQuadraticSubproblem:
    def __init__(self, x, fun, jac, hess=..., hessp=...) -> None: ...
    def __call__(self, p: ArrayLike): ...
    @property
    def fun(self): ...
    @property
    def jac(self): ...
    @property
    def hess(self): ...
    def hessp(self, p): ...
    @property
    def jac_mag(self): ...
    def get_boundaries_intersections(self, z, d, trust_radius) -> list[SupportsRichComparisonT]: ...
    def solve(self, trust_radius): ...
