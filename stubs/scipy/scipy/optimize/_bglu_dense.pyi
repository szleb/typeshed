# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.optimize._bglu_dense, version: unspecified
import builtins as _mod_builtins
import typing

import numpy.linalg as _mod_numpy_linalg

class LU(_mod_builtins.object):
    @property
    def A(self) -> typing.Any: ...
    @property
    def B(self) -> typing.Any: ...
    def __init__(self) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    @property
    def b(self) -> typing.Any: ...
    @property
    def m(self) -> typing.Any: ...
    @property
    def n(self) -> typing.Any: ...
    def solve(self) -> typing.Any: ...
    def update(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

class BGLU(LU):
    @property
    def L(self) -> typing.Any: ...
    @property
    def U(self) -> typing.Any: ...
    def __init__(self) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    def __reduce__(self) -> str | tuple[typing.Any, ...]: ...
    def __setstate__(self, state: typing.Any) -> None: ...
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    @property
    def average_solve_times(self) -> typing.Any: ...
    @property
    def bglu_time(self) -> typing.Any: ...
    @property
    def mast(self) -> typing.Any: ...
    @property
    def max_updates(self) -> typing.Any: ...
    @property
    def ops_list(self) -> typing.Any: ...
    def perform_perm(self) -> typing.Any: ...
    @property
    def pi(self) -> typing.Any: ...
    @property
    def pit(self) -> typing.Any: ...
    @property
    def plu(self) -> typing.Any: ...
    def refactor(self, *args, **kwargs) -> typing.Any: ...
    def solve(self, *args, **kwargs) -> typing.Any: ...
    @property
    def solves(self) -> typing.Any: ...
    def update(self, *args, **kwargs) -> typing.Any: ...
    def update_basis(self) -> typing.Any: ...
    @property
    def updates(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

LinAlgError = _mod_numpy_linalg.LinAlgError

def __pyx_unpickle_BGLU() -> typing.Any: ...
def __pyx_unpickle_Enum() -> typing.Any: ...
def __pyx_unpickle_LU() -> typing.Any: ...

__test__: dict

def _consider_refactor() -> typing.Any: ...
def lu_factor(a, overwrite_a, check_finite) -> typing.Any: ...
def lu_solve(lu_and_piv, b, trans, overwrite_b, check_finite) -> typing.Any: ...
def solve(a, b, sym_pos, lower, overwrite_a, overwrite_b, debug, check_finite, assume_a, transposed) -> typing.Any: ...
def solve_triangular(a, b, trans, lower, unit_diagonal, overwrite_b, debug, check_finite) -> typing.Any: ...
def timer() -> float: ...
def __getattr__(name) -> typing.Any: ...
