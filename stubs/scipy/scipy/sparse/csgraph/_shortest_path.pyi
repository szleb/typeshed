# Python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
# Library: scipy, version: 1.6.2
# Module: scipy.sparse.csgraph._shortest_path, version: unspecified
import builtins as _mod_builtins
import typing

import numpy as _mod_numpy

DTYPE = _mod_numpy.float64
ITYPE = _mod_numpy.int32

class NegativeCycleError(_mod_builtins.Exception):
    __dict__: dict[str, typing.Any]
    def __init__(self, message) -> None: ...
    @classmethod
    def __init_subclass__(cls) -> None: ...
    __module__: str
    @classmethod
    def __subclasshook__(cls, subclass: typing.Any) -> bool: ...
    @property
    def __weakref__(self) -> typing.Any: ...
    def __getattr__(self, name) -> typing.Any: ...

def __pyx_unpickle_Enum() -> typing.Any: ...

__test__: dict

def bellman_ford(csgraph, directed=..., indices=..., return_predecessors=..., unweighted=...) -> typing.Any: ...
def dijkstra(
    csgraph, directed=..., indices=..., return_predecessors=..., unweighted=..., limit=..., min_only=...
) -> typing.Any: ...
def floyd_warshall(csgraph, directed=..., return_predecessors=..., unweighted=..., overwrite=...) -> typing.Any: ...
def isspmatrix(x) -> typing.Any: ...
def isspmatrix_csc(x) -> typing.Any: ...
def isspmatrix_csr(x) -> typing.Any: ...
def johnson(csgraph, directed=..., indices=..., return_predecessors=..., unweighted=...) -> typing.Any: ...
def shortest_path(
    csgraph, method=..., directed=..., return_predecessors=..., unweighted=..., overwrite=..., indices=...
) -> typing.Any: ...
def validate_graph(
    csgraph,
    directed,
    dtype,
    csr_output,
    dense_output,
    copy_if_dense,
    copy_if_sparse,
    null_value_in,
    null_value_out,
    infinity_null,
    nan_null,
) -> typing.Any: ...
def __getattr__(name) -> typing.Any: ...
